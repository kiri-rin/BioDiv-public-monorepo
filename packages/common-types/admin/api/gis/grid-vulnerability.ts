import {
  CommonConfig,
  GeometriesImportConfig,
} from "@rrrcn/common-types/services/api/common-body";
import {
  BirdCollisionConfigType,
  WindfarmCollisionConfigType,
  WindfarmInstanceConfigType,
} from "@rrrcn/common-types/services/api/vulnerability/single-transit/config";

export type MonthsKey =
  | "0"
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "6"
  | "7"
  | "8"
  | "9"
  | "10"
  | "11";

export type GisHabitatAreaVulnerabilityCalculationConfig<FileType = string> =
  CommonConfig & {
    density:
      | GisHabitatAreaVulnerabilityCalculationConfigDensitySimpleArea<FileType>
      | GisHabitatAreaVulnerabilityCalculationConfigDensityRangedAreas<FileType>
      | GisHabitatAreaVulnerabilityCalculationConfigDensityPoints<FileType>;
    bird_speed: GisHabitatAreaVulnerabilityCalculationConfigBirdSpeedType<FileType>;
    flight_heights: GisHabitatAreaVulnerabilityCalculationConfigFlightHeightsType<FileType>;
    flight_locations: GisHabitatAreaVulnerabilityCalculationConfigFlightLocationsType<FileType>;
    bird_config: Omit<BirdCollisionConfigType, "speed">;
    updownProportion: number;
    windfarm_config: WindfarmCollisionConfigType & WindfarmInstanceConfigType;
    grid: { type: "map"; id: number } | { type: "new"; cell_size: number };
  };

export type GisHabitatAreaVulnerabilityCalculationConfigDensityPoints<
  FileType = string
> = {
  type: "points";
  points: GeometriesImportConfig<FileType>;
  outside_buffers_count: number;

  default_buffer: number;
  presence_area: GeometriesImportConfig<FileType>;

  count: GisHabitatAreaVulnerabilityCalculationConfigPointsCountType<FileType>;
};
export type GisHabitatAreaVulnerabilityCalculationConfigDensityRangedAreas<
  FileType = string
> = {
  type: "ranged_areas";
  areas: GeometriesImportConfig<FileType>;

  counts: {
    id: string;
    count: GisHabitatAreaVulnerabilityCalculationConfigRangedAreasCountType<FileType>;
  }[];
};
export type GisHabitatAreaVulnerabilityCalculationConfigDensitySimpleArea<
  FileType = string
> = {
  type: "area";

  presence_area: GeometriesImportConfig<FileType>;
  count: GisHabitatAreaVulnerabilityCalculationConfigPointsCountType<FileType>;
};
export type GisHabitatAreaVulnerabilityCalculationConfigFlightLocationsType<
  FileType = string
> =
  | { type: "average"; lightDayPercent: number }
  | { type: "table"; file: FileType };
export type GisHabitatAreaVulnerabilityCalculationConfigFlightHeightsType<
  FileType = string
> =
  | { type: "average"; percentAtRotorHeight: number }
  | { type: "table"; file: FileType };
export type GisHabitatAreaVulnerabilityCalculationConfigBirdSpeedType<
  FileType = string
> = { type: "average"; speed: number } | { type: "table"; file: FileType };
export type GisHabitatAreaVulnerabilityCalculationConfigPointsCountType<
  FileType = string
> =
  | GisHabitatAreaVulnerabilityCalculationConfigCountTableType<FileType>
  | GisHabitatAreaVulnerabilityCalculationConfigCountBreedingType;
export type GisHabitatAreaVulnerabilityCalculationConfigRangedAreasCountType<
  FileType = string
> =
  | GisHabitatAreaVulnerabilityCalculationConfigCountTableType<FileType>
  | {
      type: "breeding";
      id: string;
      count: GisHabitatAreaVulnerabilityCalculationConfigCountBreedingType;
    };
export type GisHabitatAreaVulnerabilityCalculationConfigCountBreedingType = {
  type: "breeding";
  data: {
    breeding_pairs: number;
    successful_pairs: number;
    juvenils_per_pair: number;
    subadults_ratio: number;
    percent_per_month: { [p in MonthsKey]: number };
  };
};
export type GisHabitatAreaVulnerabilityCalculationConfigCountTableType<
  FileType = string
> = { type: "table"; file: FileType };

export type GisHabitatAreaVulnerabilityCalculationConfigArea = {};
export type GisHabitatAreaVulnerabilityCalculationConfigRangedAreas = {};
