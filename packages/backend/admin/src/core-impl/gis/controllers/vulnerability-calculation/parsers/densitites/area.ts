import GeoJSON from "geojson";
import { importGeometriesGeojson } from "@rrrcn/services/src/utils/import-geometries-geojson"; //TODO REFACTOR!!
import { GisHabitatAreaVulnerabilityCalculationConfigDensitySimpleArea } from "@rrrcn/common-types/admin/api/gis/grid-vulnerability";
import { ICommonGridVulnerabilityCalculationConfigDensity } from "@rrrcn/admin/src/core/common/entities/vulnerability-result";
import { CommonArea } from "@rrrcn/admin/src/core/common/entities/area";
import { CommonSpatialGridVulnerabilityCellSingleAreaDensity } from "@rrrcn/admin/src/core/common/entities/vulnerability-result/densities/single-area";
import { parsePointsDensityCounts } from "@rrrcn/admin/src/core-impl/gis/controllers/vulnerability-calculation/parsers/densitites/points";

type InputPointsKeys =
  | "buffer"
  | "1"
  | "2"
  | "3"
  | "4"
  | "5"
  | "6"
  | "7"
  | "8"
  | "9"
  | "10"
  | "11"
  | "12"
  | "01"
  | "02"
  | "03"
  | "04"
  | "05"
  | "06"
  | "07"
  | "08"
  | "09";
export async function parseDensitiesArea(
  density: GisHabitatAreaVulnerabilityCalculationConfigDensitySimpleArea
): Promise<ICommonGridVulnerabilityCalculationConfigDensity> {
  const { count, presence_area } = density;
  const parsedArea = new CommonArea(
    (await importGeometriesGeojson(presence_area, "polygon").then(
      (res) => res!.features[0]
    )) as GeoJSON.Feature<GeoJSON.Polygon>
  );

  const parsedCount = await parsePointsDensityCounts(count);
  return new CommonSpatialGridVulnerabilityCellSingleAreaDensity(
    parsedArea,
    parsedCount
  );
}
