import { IMapVulnerabilityCalculation } from "@rrrcn/admin/src/core/vulnerability-map/entities/vulnerability-result";
import { IMapMigration } from "@rrrcn/admin/src/core/vulnerability-map/entities/migrations";
import { ICommonGridVulnerabilityCalculationConfig } from "@rrrcn/admin/src/core/common/entities/vulnerability-result";
import { IMapHabitatArea } from "@rrrcn/admin/src/core/vulnerability-map/entities/habitat-area";
import {
  StrapiMapVulnerabilityCalculationHabitatAreaConfig,
  StrapiMapVulnerabilityCalculationImportConfig,
  StrapiMapVulnerabilityCalculationMigrationConfig,
} from "@rrrcn/admin/src/core-impl/map/entities/vulnerability-result/index";
import { MapVulnereabilityCalculation } from "@rrrcn/common-types/strapi/custom-models/MapVulnereabilityCalculation";
import { IMapImportConfig } from "@rrrcn/admin/src/core/vulnerability-map/entities/import";

type IdType = number;
export class StrapiMapVulnerabilityCalculationHabitatArea
  implements IMapVulnerabilityCalculation<IdType>
{
  private strapiVulnerabilityCalculation: MapVulnereabilityCalculation;
  private habitatArea: IMapHabitatArea<number>;
  public readonly config: ICommonGridVulnerabilityCalculationConfig;

  constructor(
    strapiVulnerabilityCalculation: MapVulnereabilityCalculation,
    habitatArea: IMapHabitatArea<number>
  ) {
    this.strapiVulnerabilityCalculation = strapiVulnerabilityCalculation;
    this.habitatArea = habitatArea;
    this.config = new StrapiMapVulnerabilityCalculationHabitatAreaConfig(
      strapiVulnerabilityCalculation,
      habitatArea
    );
  }

  get id(): IdType {
    return this.strapiVulnerabilityCalculation.id;
  }

  get spatialGridId(): IdType {
    return this.strapiVulnerabilityCalculation.map_spatial_grid.id;
  }

  get isProcessed(): boolean {
    return this.strapiVulnerabilityCalculation.processed;
  }
}

export class StrapiMapVulnerabilityCalculationMigration
  implements IMapVulnerabilityCalculation<IdType>
{
  private strapiVulnerabilityCalculation: MapVulnereabilityCalculation;
  private migration: IMapMigration<number>;
  public readonly config: ICommonGridVulnerabilityCalculationConfig;

  constructor(
    strapiVulnerabilityCalculation: MapVulnereabilityCalculation,
    migration: IMapMigration<number>
  ) {
    this.strapiVulnerabilityCalculation = strapiVulnerabilityCalculation;
    this.migration = migration;
    this.config = new StrapiMapVulnerabilityCalculationMigrationConfig(
      strapiVulnerabilityCalculation,
      migration
    );
  }

  get id(): IdType {
    return this.strapiVulnerabilityCalculation.id;
  }

  get spatialGridId(): IdType {
    return this.strapiVulnerabilityCalculation.map_spatial_grid.id;
  }

  get isProcessed(): boolean {
    return this.strapiVulnerabilityCalculation.processed;
  }
}

export class StrapiMapVulnerabilityCalculationImport
  implements IMapVulnerabilityCalculation<IdType>
{
  public readonly config: ICommonGridVulnerabilityCalculationConfig;

  constructor(
    private strapiVulnerabilityCalculation: MapVulnereabilityCalculation,
    private importConfig: IMapImportConfig<number>
  ) {
    this.config = new StrapiMapVulnerabilityCalculationImportConfig(
      strapiVulnerabilityCalculation,
      importConfig
    );
  }

  get id(): IdType {
    return this.strapiVulnerabilityCalculation.id;
  }

  get spatialGridId(): IdType {
    return this.strapiVulnerabilityCalculation.map_spatial_grid.id;
  }

  get isProcessed(): boolean {
    return this.strapiVulnerabilityCalculation.processed;
  }
}
