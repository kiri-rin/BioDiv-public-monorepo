import {
  IMapSpatialGrid,
  IMapSpatialGridDistrict,
  IMapSpatialGridCell,
} from "@rrrcn/admin/src/core/vulnerability-map/entities/spatial-grid";
import { CommonArea } from "@rrrcn/admin/src/core/common/entities/area";
import { VulnerabilityMapAdminApiTypes } from "@rrrcn/common-types/admin/api/vulnerability-map/map-admin";

export abstract class IMapSpatialGridRepository<IdType> {
  abstract getSpatialGrid(gridId: IdType): Promise<IMapSpatialGrid<IdType>>;
  abstract getSpatialGridDistrict(
    districtId: IdType
  ): Promise<IMapSpatialGridDistrict<IdType>>;
  abstract saveSpatialGrid(grid: IMapSpatialGrid<IdType>): Promise<void>;

  abstract createSpatialGridCell(gridId: IdType, area: any): Promise<void>;

  abstract createSpatialGrid(
    params: VulnerabilityMapAdminApiTypes.CreateSpatialGrid.Body
  ): Promise<IMapSpatialGrid<IdType>>;
  abstract createSpatialGridDistrict(
    params: VulnerabilityMapAdminApiTypes.CreateSpatialGridDistrict.Body
  ): Promise<IMapSpatialGridDistrict<IdType>>;

  abstract getSpatialGridDistrictCells(params: {
    districtId: IdType;
  }): Promise<IMapSpatialGridCell<IdType>[]>;

  abstract getSpatialGridCellsByIds(params: {
    ids: IdType[];
  }): Promise<IMapSpatialGridCell<IdType>[]>;

  abstract getSpatialGridPublishedDistricts(params: {
    gridId: IdType;
  }): Promise<IMapSpatialGridDistrict<IdType>[]>;

  abstract getPublishedSpatialGrids(): Promise<IMapSpatialGrid<IdType>[]>;

  abstract getSpatialGridCellsWithVulnerabilities(
    id: string
  ): Promise<IMapSpatialGridCell<IdType>[]>;

  abstract getSpatialGridAreaCells(
    id: IdType,
    area: CommonArea
  ): Promise<IMapSpatialGridCell<IdType>[]>;
  abstract getSpatialGridHabitatAreaCells(
    id: IdType,
    habitatAreaId: IdType
  ): Promise<IMapSpatialGridCell<IdType>[]>;
  abstract getSpatialGridImportConfigCells(
    id: IdType,
    importConfigId: IdType
  ): Promise<IMapSpatialGridCell<IdType>[]>;
  abstract getSpatialGridMigrationCells(
    id: IdType,
    migrationId: IdType
  ): Promise<IMapSpatialGridCell<IdType>[]>;
  abstract addHabitatAreaToCell(params: {
    habitatAreaId: IdType;
    cellId: IdType;
  }): Promise<void>;
  abstract addImportConfigToCell(params: {
    importConfigId: IdType;
    cellId: IdType;
  }): Promise<void>;
  abstract addMigrationToCell(params: {
    migrationId: IdType;
    cellId: IdType;
  }): Promise<void>;
  abstract addDistrictToCell(params: {
    districtId: IdType;
    cellId: IdType;
  }): Promise<void>;
  abstract markSpatialGridAsFulfilled(params: {
    gridId: IdType;
  }): Promise<void>;
  abstract markSpatialGridDistrictAsIndexed(params: {
    districtId: IdType;
  }): Promise<void>;
}
