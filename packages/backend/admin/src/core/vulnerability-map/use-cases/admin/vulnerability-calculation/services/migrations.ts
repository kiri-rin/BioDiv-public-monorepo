import { CommonVulnerabilityCalculator } from "@rrrcn/admin/src/core/common/entities/vulnerability-config";
import { IMapSpatialGridRepository } from "@rrrcn/admin/src/core/vulnerability-map/repository/spatial-grid";
import { IMapVulnerabilityResultRepository } from "@rrrcn/admin/src/core/vulnerability-map/repository/vulnerability-result";
import { IMapMigrationsRepository } from "@rrrcn/admin/src/core/vulnerability-map/repository/migrations";
import { MapVulnereabilityCalculationConfig } from "@rrrcn/common-types/strapi/custom-models/MapVulnereabilityCalculation";
import { CommonMapVulnerabilityCalculationService } from "@rrrcn/admin/src/core/vulnerability-map/use-cases/admin/vulnerability-calculation/services/index";

export class MapMigrationVulnerabilityCalculationService<
  IdType
> extends CommonMapVulnerabilityCalculationService<IdType> {
  constructor(
    protected vulnerabilityCalculator: CommonVulnerabilityCalculator<IdType>,
    vulnerabilityRepository: IMapVulnerabilityResultRepository<IdType>,
    private migrationsRepository: IMapMigrationsRepository<IdType>,
    private spatialGridRepository: IMapSpatialGridRepository<IdType>
  ) {
    super(vulnerabilityRepository);
    this.migrationsRepository = migrationsRepository;
    this.spatialGridRepository = spatialGridRepository;
  }
  async calculateSpatialGridMigrationVulnerability({
    spatialGridId,
    migrationId,
    vulnerabilityConfig,
  }: {
    spatialGridId: IdType;
    migrationId: IdType;
    vulnerabilityConfig: MapVulnereabilityCalculationConfig;
  }) {
    const spatialGrid = await this.spatialGridRepository.getSpatialGrid(
      spatialGridId
    );
    const migration = await this.migrationsRepository.getMigration(migrationId);
    const vulnerabilityCalculation =
      await this.vulnerabilityRepository.createMigrationVulnerabilityCalculation(
        {
          gridId: spatialGrid.id,
          migrationId: migration.id,
          config: vulnerabilityConfig,
        }
      );
    const cells = await this.spatialGridRepository.getSpatialGridMigrationCells(
      spatialGrid.id,
      migrationId
    );

    this.processVulnerabilityCalculation(
      vulnerabilityCalculation,
      cells,
      this.vulnerabilityCalculator
    );
    return vulnerabilityCalculation;
  }
}
