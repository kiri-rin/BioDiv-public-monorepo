import { CommonArea } from "@rrrcn/admin/src/core/common/entities/area";
import { ICommonGridVulnerabilityCalculationConfig } from "@rrrcn/admin/src/core/common/entities/vulnerability-result";
import { IGisSpatialGridRepository } from "@rrrcn/admin/src/core/gis/repository/spatial-grid";
import { IMapSpatialGridCell } from "@rrrcn/admin/src/core/vulnerability-map/entities/spatial-grid";
import { CommonVulnerabilityCalculator } from "@rrrcn/admin/src/core/common/entities/vulnerability-config";
import { AreaVulnerabilityControllerResponse } from "@rrrcn/common-types/services/api/vulnerability/overall/configs";
import { CommonVulnerabilityConfig } from "@rrrcn/common-types/common/vulnerability-config";

export class GisVulnerabilityCalculationService<IdType> {
  constructor(
    private spatialGridRepository: IGisSpatialGridRepository<IdType>,
    private vulnerabilityCalculator: CommonVulnerabilityCalculator<IdType>
  ) {}
  async *calculateHabitatAreaVulnerabilityGrid(
    config: ICommonGridVulnerabilityCalculationConfig,
    grid: { type: "map"; id: IdType } | { type: "new"; cell_size: number },
    area?: CommonArea
  ) {
    let cells: IMapSpatialGridCell<IdType>[];
    switch (grid.type) {
      case "map": {
        cells = await this.spatialGridRepository.getSpatialGridAreaCells(
          grid.id,
          area
        );
        break;
      }
      case "new": {
        throw "not implemented";
        //
        // const _polygon = area.polygon.geometry;
        // const bbox = turf.bbox(_polygon);
        // return await squareGridStream(bbox, grid.cell_size, { offset: 10 });
        // break;
      }
    }
    const res: {
      cellId: IdType;
      vulnerability: AreaVulnerabilityControllerResponse;
      cellConfig: CommonVulnerabilityConfig;
    }[] = [];
    for (const cell of cells) {
      const cellConfig = config.getCellConfig(cell);
      const vulnerability =
        await this.vulnerabilityCalculator.calculateVulnerability(cellConfig);
      yield { cellId: cell.id, vulnerability, cellConfig };
    }
  }
}
